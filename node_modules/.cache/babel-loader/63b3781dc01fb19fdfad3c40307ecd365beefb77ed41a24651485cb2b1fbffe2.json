{"ast":null,"code":"export default {\n  name: 'Spotify',\n  components: {},\n  data() {\n    return {};\n  },\n  methods: {\n    GetUserProfile() {\n      return {\n        'background-image': 'url(' + this.$store.state.userData.images[1].url + ')',\n        'background-size': 'cover',\n        'background-repeat': 'no-repeat',\n        'background-position': 'center'\n      };\n    },\n    async GetUserTopTracks() {\n      const result = await fetch(\"https://api.spotify.com/v1/me/top/artists\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${this.$store.state.token}`\n        }\n      });\n      return await result.json();\n    },\n    async GetTopTracksJson() {\n      const toptracks = await this.GetUserTopTracks();\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","methods","GetUserProfile","$store","state","userData","images","url","GetUserTopTracks","result","fetch","method","headers","Authorization","token","json","GetTopTracksJson","toptracks"],"sources":["C:\\Users\\Hasan\\Desktop\\website\\mywebsite\\src\\components\\Spotify.vue"],"sourcesContent":["<template>\r\n    <div class=\"w-full h-full bg-cover bg-no-repeat gap-1  bg-center bg-[url(@/assets/spotify-background.jpg)] flex justify-center items-center\">\r\n        <div class=\"w-[25vw] h-full   gap-2 flex flex-col items-center justify-center\">\r\n            <div class=\"w-[20vw] h-[5vh]  flex items-center spotifyfont text-[#1DB954]\">Spotify Informations - {{ this.$store.state.userData.display_name }}</div>\r\n            <div class=\"w-[20vw] h-[30vh]  flex flex-col \" >\r\n                <div class=\"w-[12.5vw] h-[20vh]  rounded-md \" :style=\"GetUserProfile()\"></div>\r\n            </div>\r\n            <div class=\"w-[20vw] h-[50vh] flex flex-col \">\r\n                <div class=\"w-[20vw] h-[5vh]  flex justify-between items-center\">\r\n                    <p class=\"spotifyfont text-white \">Product Type</p>\r\n                    <p class=\"spotifyfont  text-[#1DB954] capitalize\">{{ this.$store.state.userData.product }}</p>\r\n                </div>\r\n                <div class=\"w-[20vw] h-[5vh]  flex justify-between items-center\">\r\n                    <p class=\"spotifyfont text-white \">Total Friends</p>\r\n                    <p class=\"spotifyfont  text-[#1DB954] capitalize\">{{ this.$store.state.userData.followers.total }}</p>\r\n                </div>\r\n                <div class=\"w-[20vw] h-[5vh]  flex justify-between items-center\">\r\n                    <p class=\"spotifyfont text-white \">Country</p>\r\n                    <p class=\"spotifyfont  text-[#1DB954] capitalize\">{{ this.$store.state.userData.country }}</p>\r\n                </div>\r\n                <div class=\"w-[20vw] h-[5vh]  flex justify-between items-center\">\r\n                    <a class=\"spotifyfont  text-[#1DB954] capitalize\" target=\"_blank\" :href=\"this.$store.state.userData.external_urls.spotify\">Your Spotify Link</a>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"w-[50vw] h-full  opacity-10\">\r\n            \r\n        </div>\r\n        <div class=\"w-[25vw] h-full  \" @click=\"this.GetUserTopTracks()\">\r\n            {{ this.$store.state.token }}\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Spotify',\r\n    components: {},\r\n    data() {\r\n      return {\r\n\r\n      };\r\n    },\r\n    methods: {\r\n        GetUserProfile() {\r\n            return {\r\n                'background-image': 'url(' + this.$store.state.userData.images[1].url + ')',\r\n                'background-size': 'cover',\r\n                'background-repeat': 'no-repeat',\r\n                'background-position': 'center'\r\n            }\r\n        },\r\n        async GetUserTopTracks() {\r\n            const result = await fetch(\"https://api.spotify.com/v1/me/top/artists\", {\r\n                    method: \"GET\",\r\n                    headers: { Authorization: `Bearer ${this.$store.state.token}` },\r\n                });\r\n\r\n                return await result.json();\r\n        },\r\n        async GetTopTracksJson() {\r\n            const toptracks = await this.GetUserTopTracks();\r\n        }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  "],"mappings":"AAoCE,eAAe;EACbA,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO,CAEP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAG;MACb,OAAO;QACH,kBAAkB,EAAE,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAE,GAAI,GAAG;QAC3E,iBAAiB,EAAE,OAAO;QAC1B,mBAAmB,EAAE,WAAW;QAChC,qBAAqB,EAAE;MAC3B;IACJ,CAAC;IACD,MAAMC,gBAAgBA,CAAA,EAAG;MACrB,MAAMC,MAAK,GAAI,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QAChEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAEC,aAAa,EAAG,UAAS,IAAI,CAACV,MAAM,CAACC,KAAK,CAACU,KAAM;QAAE;MAClE,CAAC,CAAC;MAEF,OAAO,MAAML,MAAM,CAACM,IAAI,CAAC,CAAC;IAClC,CAAC;IACD,MAAMC,gBAAgBA,CAAA,EAAG;MACrB,MAAMC,SAAQ,GAAI,MAAM,IAAI,CAACT,gBAAgB,CAAC,CAAC;IACnD;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}