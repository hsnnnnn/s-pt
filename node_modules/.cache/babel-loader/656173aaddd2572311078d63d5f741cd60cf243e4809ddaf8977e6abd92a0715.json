{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nexport default {\n  name: 'MainPage',\n  components: {},\n  data() {\n    return {\n      clientId: \"8ef5d1b0004849b48db5af3ea7259c49\",\n      code: null\n    };\n  },\n  methods: {\n    async CallApi(app) {\n      if (app == 'spotify') {\n        if (!this.code) {\n          this.redirectToAuthCodeFlow(this.clientId);\n        } else {\n          const accessToken = await this.getAccessToken(this.clientId, this.code);\n          const profile = await this.fetchProfile(accessToken);\n          this.populateUI(profile);\n        }\n      } else {\n        this.$router.push('/netflix');\n      }\n    },\n    async redirectToAuthCodeFlow(clientId) {\n      const verifier = this.generateCodeVerifier(128);\n      const challenge = await this.generateCodeChallenge(verifier);\n      localStorage.setItem(\"verifier\", verifier);\n      const params = new URLSearchParams();\n      params.append(\"client_id\", clientId);\n      params.append(\"response_type\", \"code\");\n      params.append(\"redirect_uri\", \"http://localhost:8080/\");\n      params.append(\"scope\", \"user-read-private user-read-email\");\n      params.append(\"code_challenge_method\", \"S256\");\n      params.append(\"code_challenge\", challenge);\n      document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n    },\n    generateCodeVerifier(length) {\n      let text = '';\n      let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n      return text;\n    },\n    async generateCodeChallenge(codeVerifier) {\n      const data = new TextEncoder().encode(codeVerifier);\n      const digest = await window.crypto.subtle.digest('SHA-256', data);\n      return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n    },\n    async getAccessToken(clientId, code) {\n      const verifier = localStorage.getItem(\"verifier\");\n      const params = new URLSearchParams();\n      params.append(\"client_id\", clientId);\n      params.append(\"grant_type\", \"authorization_code\");\n      params.append(\"code\", code);\n      params.append(\"redirect_uri\", \"http://localhost:5173/callback\");\n      params.append(\"code_verifier\", verifier);\n      const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: params\n      });\n      const {\n        access_token\n      } = await result.json();\n      return access_token;\n    },\n    async fetchProfile(token) {\n      const result = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return await result.json();\n    },\n    populateUI(profile) {\n      console.log(profile.email);\n    }\n  },\n  async mounted() {}\n};","map":{"version":3,"names":["name","components","data","clientId","code","methods","CallApi","app","redirectToAuthCodeFlow","accessToken","getAccessToken","profile","fetchProfile","populateUI","$router","push","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","params","URLSearchParams","append","document","location","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","TextEncoder","encode","digest","window","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","getItem","result","fetch","method","headers","body","access_token","json","token","Authorization","console","log","email","mounted"],"sources":["C:\\Users\\Hasan\\Desktop\\website\\mywebsite\\src\\components\\MainPage.vue"],"sourcesContent":["<template>\n  <div class=\"fullcontainer w-full h-full bg-[#191717] flex items-center gap-1 justify-center\">\n    <div class=\"w-[50vw] h-full bg-black flex items-center justify-center transition-all opacity-60 hover:opacity-80 flex-col bg-cover bg-no-repeat bg-center bg-[url(@/assets/netflixtv-2.jpg)]\">\n      <div class=\"w-[40vw] h-[10vh] flex justify-center items-center\" style=\"margin-top: 25vh;\">\n        <p class=\"netflixfont text-3xl cursor-pointer text-white hover:text-4xl transition-all\" @click=\"CallApi('netflix')\">GET MY STATISTICS</p>\n      </div>\n    </div>\n    <div class=\"w-[50vw] h-full bg-black flex items-center transition-all justify-center opacity-60 hover:opacity-80 flex-col bg-cover bg-no-repeat bg-center bg-[url(@/assets/spotifytv.jpg)]\">\n      <div class=\"w-[40vw] h-[10vh] flex justify-center items-center\" style=\"margin-top: 25vh;\">\n        <p class=\"netflixfont text-3xl cursor-pointer text-white hover:text-4xl transition-all\" @click=\"CallApi('spotify')\">GET MY STATISTICS</p>\n      </div>\n    </div>\n    <a class=\"absolute bottom-5 right-5 netflixfont\" target=\"_blank\" href=\"https://github.com/hsnnnnn\">Created by hsn361</a>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MainPage',\n  components: {},\n  data() {\n    return {\n      clientId: \"8ef5d1b0004849b48db5af3ea7259c49\",\n      code: null,\n    };\n  },\n  methods: {\n    async CallApi(app) {\n      if (app == 'spotify') {\n        if (!this.code) {\n      this.redirectToAuthCodeFlow(this.clientId);\n    } else {\n      const accessToken = await this.getAccessToken(this.clientId, this.code);\n      const profile = await this.fetchProfile(accessToken);\n      this.populateUI(profile);\n    }\n      } else {\n        this.$router.push('/netflix');\n      }\n    },\n    async redirectToAuthCodeFlow(clientId) {\n      const verifier = this.generateCodeVerifier(128);\n      const challenge = await this.generateCodeChallenge(verifier);\n\n      localStorage.setItem(\"verifier\", verifier);\n\n      const params = new URLSearchParams();\n      params.append(\"client_id\", clientId);\n      params.append(\"response_type\", \"code\");\n      params.append(\"redirect_uri\", \"http://localhost:8080/\");\n      params.append(\"scope\", \"user-read-private user-read-email\");\n      params.append(\"code_challenge_method\", \"S256\");\n      params.append(\"code_challenge\", challenge);\n\n      document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n    },\n    generateCodeVerifier(length) {\n      let text = '';\n      let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n      for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n      return text;\n    },\n    async generateCodeChallenge(codeVerifier) {\n      const data = new TextEncoder().encode(codeVerifier);\n      const digest = await window.crypto.subtle.digest('SHA-256', data);\n      return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n    },\n    async getAccessToken(clientId, code) {\n      const verifier = localStorage.getItem(\"verifier\");\n\n      const params = new URLSearchParams();\n      params.append(\"client_id\", clientId);\n      params.append(\"grant_type\", \"authorization_code\");\n      params.append(\"code\", code);\n      params.append(\"redirect_uri\", \"http://localhost:5173/callback\");\n      params.append(\"code_verifier\", verifier);\n\n      const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: params,\n      });\n\n      const { access_token } = await result.json();\n      return access_token;\n    },\n    async fetchProfile(token) {\n      const result = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      return await result.json();\n    },\n    populateUI(profile) {\n      console.log(profile.email);\n    },\n  },\n  async mounted() {\n    \n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}